apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab
  namespace: rds-git
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: gitlab
  template:
    metadata:
      labels:
        app: gitlab
    spec:
      securityContext:
        runAsUser: 2000  # Higher UID for security
        runAsGroup: 2000  # Higher GID for security
        fsGroup: 2000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault  # Adding seccomp profile
      containers:
        - name: gitlab
          image: "gitlab/gitlab-ce@sha256:f6039561028de5251c65f4ad81f20b9b5026a70240d33fb4dc3d34472a7dcbc4"
          imagePullPolicy: Always
          env:
            - name: GITLAB_OMNIBUS_CONFIG
              value: |
                external_url 'http://gitlab.example.com';
                gitlab_rails['db_host'] = '{{ .Values.postgresql.host }}';
                gitlab_rails['db_port'] = {{ .Values.postgresql.port }};
                gitlab_rails['db_database'] = '{{ .Values.postgresql.database }}';
                gitlab_rails['db_username'] = "/etc/secrets/postgresql/username";  # File path
                gitlab_rails['db_password'] = "/etc/secrets/postgresql/password";  # File path
          envFrom:
            - secretRef:
                name: {{ .Values.postgresql.existingSecret }}
          ports:
            - containerPort: 80
          volumeMounts:
            - mountPath: /var/opt/gitlab
              name: gitlab-storage
            - mountPath: /var/opt/gitlab/backups
              name: gitlab-backup-volume
            - mountPath: /etc/secrets/postgresql  # Mount the secret as files
              name: postgres-secret
              readOnly: true
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 2000  # Higher UID for security
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              cpu: "500m"
              memory: "1Gi"
            limits:
              cpu: "1000m"
              memory: "2Gi"
      volumes:
        - name: gitlab-storage
          persistentVolumeClaim:
            claimName: gitlab-pvc
        - name: gitlab-backup-volume
          persistentVolumeClaim:
            claimName: gitlab-backup-pvc
        - name: postgres-secret
          secret:
            secretName: {{ .Values.postgresql.existingSecret }}
