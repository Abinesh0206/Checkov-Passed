apiVersion: apps/v1
kind: Deployment
metadata:
  name: gitlab
  namespace: rds-git
  labels:
    app: gitlab
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: gitlab
  template:
    metadata:
      labels:
        app: gitlab
    spec:
      initContainers:
        - name: fix-permissions
          image: alpine:3.18
          command:
            - /bin/sh
            - -c
            - |
              chown -R 998:998 /var/opt/gitlab || echo "warn: chown fail"
              chmod -R 755 /var/opt/gitlab || echo "warn: chmod fail"
              chown -R 998:998 /var/opt/gitlab/git-data || echo "warn: chown git-data"
              chmod -R 755 /var/opt/gitlab/git-data || echo "warn: chmod git-data"
              chown -R 998:998 /var/opt/gitlab/backups || echo "warn: chown backups"
              chmod -R 755 /var/opt/gitlab/backups || echo "warn: chmod backups"
          securityContext:
            runAsUser: 0
            runAsGroup: 0
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /var/opt/gitlab
              name: gitlab-storage
            - mountPath: /var/opt/gitlab/backups
              name: gitlab-backup-volume
      containers:
        - name: gitlab
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.postgresql.existingSecret }}
                  key: {{ .Values.postgresql.existingSecretPasswordKey }}
            - name: GITLAB_OMNIBUS_CONFIG
              value: |
                {{- range .Values.ingress.hosts }}
                external_url 'http://{{ .host }}';
                {{- end }}
                gitlab_rails['db_host'] = '{{ $.Values.postgresql.host }}';
                gitlab_rails['db_port'] = {{ $.Values.postgresql.port }};
                gitlab_rails['db_database'] = '{{ $.Values.postgresql.database }}';
                gitlab_rails['db_username'] = '{{ $.Values.postgresql.username }}';
                gitlab_rails['db_password'] = File.read('/etc/secrets/postgresql/password');
                gitlab_rails['backup_path'] = "/var/opt/gitlab/backups";
                nginx['listen_port'] = 80;
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: ssh
              containerPort: 22
              protocol: TCP
          volumeMounts:
            - mountPath: /var/opt/gitlab
              name: gitlab-storage
            - mountPath: /var/opt/gitlab/backups
              name: gitlab-backup-volume
            - mountPath: /etc/secrets/postgresql
              name: postgres-secret
              readOnly: true
            - mountPath: /etc/gitlab
              name: gitlab-config
            - mountPath: /etc/ssh
              name: ssh-volume
          livenessProbe:
            httpGet:
              path: /-/health
              port: http
            initialDelaySeconds: 300
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /-/readiness
              port: http
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
      volumes:
        - name: gitlab-storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default "gitlab-pvc" }}
        - name: gitlab-backup-volume
          persistentVolumeClaim:
            claimName: {{ .Values.backups.existingClaim | default "gitlab-backup-pvc" }}
        - name: postgres-secret
          secret:
            secretName: {{ .Values.postgresql.existingSecret }}
            items:
              - key: {{ .Values.postgresql.existingSecretPasswordKey }}
                path: password
        - name: gitlab-config
          emptyDir: {}
        - name: ssh-volume
          emptyDir: {}
